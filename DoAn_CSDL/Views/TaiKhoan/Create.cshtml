@using DoAn_CSDL.Shared
@using DoAn_CSDL.TaiKhoan_wsv
@{
    ViewBag.Title = "Thêm mới tài khoản";
    Layout = "~/Views/Shared/_MainLayout.cshtml";

    bool isAdmin = (Session[Constants.UserRole_SessionName] == null) ? false : Session[Constants.UserRole_SessionName].Equals(0); //0 id admin
}

<div class="main__content">
    <h1 class="main__title">THÊM MỚI TÀI KHOẢN</h1>

    <div class="card">
        <p class="card-title">Thông tin tài khoản:</p>
        <div class="card-body">
            <form class="form-group custom-form" id="input-form" onsubmit="return false;">
                <div class="row">
                    <div class="col-12 col-sm-8 col-md-6 form-group position-relative">
                        <label for="file_avatar">Ảnh đại diện:</label>
                        <img src="~/Data/System/Images/default_image.jpg" class="mt-1 mb-3 img-detail" onclick="ShowImage(this)" id="avatar-review" />
                        <input type="text" name="txt_ImgName" id="txt_ImgName" class="form-control" hidden />
                        <label class="custom-input-file" id="file_Image">
                            <input type="file" name="file_Upload" class="form-control-file" accept="image/*" onchange="SingleImageChange(this)" />
                            <input type="text" class="form-control" placeholder="Chọn tệp. . . " tabindex="-1" />
                            <span>File browser</span>
                        </label>
                    </div>
                    <div class="col-4 d-none d-sm-block"></div>

                    @*<div class="col-12 col-sm-4 col-md-3 form-group position-relative">
                        <label for="txt_ID">Mã tài khoản:</label>
                        <input type="text" name="txt_ID" id="txt_ID" class="form-control" autocomplete="off" maxlength="500" value="@id" disabled />
                    </div>*@
                    <div class="col-8 d-none d-sm-block"></div>

                    <div class="col-12 col-sm-8 col-md-6 form-group position-relative">
                        <label for="txt_HoTen">Họ và tên<span class="required">*</span>:</label>
                        <input type="text" name="txt_HoTen" id="txt_HoTen" class="form-control" autocomplete="off" maxlength="200" autofocus />
                    </div>
                    <div class="col-12 col-sm-6 col-md-4 col-lg-3 form-group position-relative">
                        <label for="txt_NgaySinh">Ngày sinh<span class="required">*</span>:</label>
                        <input type="date" name="txt_NgaySinh" id="txt_NgaySinh" class="form-control" autocomplete="off" />
                    </div>

                    <div class="col-12 col-md-8 form-group position-relative">
                        <label for="txt_DiaChi">Địa chỉ:</label>
                        <input type="text" name="txt_DiaChi" id="txt_DiaChi" class="form-control" autocomplete="off" maxlength="300" />
                    </div>
                    <div class="col-4 d-none d-md-block"></div>

                    <div class="col-12 col-sm-6 col-lg-4 form-group position-relative">
                        <label for="txt_SDT">Số điện thoại<span class="required">*</span>:</label>
                        <input type="text" name="txt_SDT" id="txt_SDT" class="form-control" autocomplete="off" maxlength="11" placeholder="VD: 0964062210" />
                    </div>
                    <div class="col-6 d-none d-md-block"></div>

                    <div class="col-12 col-sm-8 col-md-6">
                        <label for="txt_TaiKhoan">Tên tài khoản<span class="required">*</span>:</label>
                        <input type="text" name="txt_UserName" id="txt_UserName" class="form-control" autocomplete="off" maxlength="100" />
                    </div>
                    <div class="col-6 d-none d-md-block"></div>

                    <div class="col-12 col-sm-8 col-md-6 col-lg-4">
                        <label for="txt_MatKhau">Mật khẩu:</label>
                        <div class="d-flex">
                            <input type="password" name="txt_Password" id="txt_Password" class="form-control" autocomplete="off" maxlength="200" />
                            <button type="button" class="showPas" onclick="ShowPas(this)" tabindex="-1">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-6 d-none d-md-block"></div>

                    <div class="col-12 col-sm-8 col-md-6 col-lg-4">
                        <label for="txt_ReMatKhau">Nhập lại mật khẩu:</label>
                        <div class="d-flex">
                            <input type="password" name="txt_RePassword" id="txt_RePassword" class="form-control" autocomplete="off" maxlength="200" />
                            <button type="button" class="showPas" onclick="ShowPas(this)" tabindex="-1">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-6 d-none d-md-block"></div>

                    <div class="col-12 col-sm-4 col-lg-3">
                        <label for="sel_PhanQuyen">Phân quyền<span class="required">*</span>: </label>
                        <select name="sel_PhanQuyen" id="sel_PhanQuyen" class="form-control">
                            <option value="-1">-- Chọn phân quyền --</option>
                            <!---->
                        </select>
                    </div>
                    <div class="col-12 col-sm-4 col-lg-3 @Html.Raw(isAdmin? "": "d-none")">
                        <label for="sel_HeThong">Hệ thống<span class="required">*</span>: </label>
                        <select name="sel_HeThong" id="sel_HeThong" class="form-control">
                            <option value="-1">-- Chọn hệ thống --</option>
                            <!---->
                        </select>
                    </div>
                </div>
            </form>
        </div>
        <div class="card-bottom">
            <p class="card-bottom__note" id="card-note"><strong>Lưu ý:</strong> Những trường có dấu <span class="required">*</span> bắt buộc phải có giá trị!</p>
        </div>
    </div>

    <div class="d-flex justify-content-end">
        <button type="button" class="btn btn-primary custom-btn-func" onclick="Create()">
            <i class="fas fa-plus"></i> Thêm mới
        </button>
    </div>
</div>

<script>
    var editObj;
    const ctrl_Name = "/TaiKhoan/";

    function GetListPhanQuyen() {
        $.ajax({
            url: "/PhanQuyen/GetListCombobox",
            method: "POST",
            success: function (result, status, xhr) {
                let rs = JSON.parse(result);
                console.log("List phan quyen: ", rs);

                let htmlResult = "<option value='-1'>-- Chọn phân quyền --</option>"
                if (rs.ErrCode == 2) {
                    rs.Data.forEach((item) => {
                        htmlResult += "<option value='" + item.Data + "'>" + item.DisplayData + "</option>";
                    });
                }
                else {
                    //Error
                }
                $('#sel_PhanQuyen').html(htmlResult);
            },
            error: function () {
                //
            }
        });
    }

    function GetListHeThong() {
        $.ajax({
            url: "/HeThong/GetListCombobox",
            method: "POST",
            success: function (result, status, xhr) {
                let rs = JSON.parse(result);
                console.log("List phan quyen: ", rs);

                let htmlResult = "<option value='-1'>-- Chọn hệ thống --</option>"
                if (rs.ErrCode == 2) {
                    rs.Data.forEach((item) => {
                        htmlResult += "<option value='" + item.Data + "'>" + item.DisplayData + "</option>";
                    });
                }
                else {
                    //Error
                }
                $('#sel_HeThong').html(htmlResult);
            },
            error: function () {
                //
            }
        });
    }

    function Create() {
        //Reset biến kiểm tra:
        hasFocus = false;

        let HoTen = $('#txt_HoTen');
        let HoTen_val = HoTen.val();
        if (HoTen_val.length == 0) {
            TryFocus(HoTen, "Không được để trống họ và tên!");
        }
        else if (HoTen_val.length > 200) {
            TryFocus(HoTen, "Họ và tên không vượt quá 200 ký tự!");
        }
        else if (!ValidTen(HoTen_val)) {
            TryFocus(HoTen, "Họ và tên quá ngắn hoặc chứa ký tự đặc biệt!");
        }

        let NgaySinh = $('#txt_NgaySinh');
        let NgaySinh_val = NgaySinh.val();
        if (NgaySinh_val == 0) {
            TryFocus(NgaySinh, "Ngày sinh trống hoặc giá trị không hợp lệ!");
        }
        else {
            let nsDate = new Date(NgaySinh_val);
            let date = new Date();
            if (date.getFullYear() - nsDate.getFullYear() < 15) {
                TryFocus(NgaySinh, "Ngày sinh không hợp lệ!");
            }
        }

        let SDT = $('#txt_SDT');
        let SDT_val = SDT.val();
        if (SDT_val.length == 0) {
            TryFocus(SDT, "Không được để trống số điện thoại!");
        }
        else if (SDT_val.length > 11) {
            TryFocus(SDT, "Số điện thoại không vượt quá 11 ký tự!");
        }
        else if (!ValidSDT(SDT_val)) {
            TryFocus(SDT, "Số điện thoại chỉ chứa các ký tự 0-9!");
        }

        let UserName = $('#txt_UserName');
        let UserName_val = UserName.val();
        if (UserName_val.length == 0) {
            TryFocus(UserName, "Không được để trống tài khoản!");
        }
        else if (UserName_val.length > 100) {
            TryFocus(UserName, "Tên tài khoản không vượt quá 100 ký tự!");
        }
        else if (!ValidTaiKhoan(UserName_val)) {
            TryFocus(UserName, "Tên tài khoản chỉ chứa các ký tự A-Z a-z 0-9 và _!");
        }

        let Password = $('#txt_Password');
        let Password_val = Password.val();
        if (Password_val.length != 0) {
            if (Password_val.length < 6) {
                TryFocus(Password, "Mật khẩu phải chứa ít nhất 6 ký tự!");
            }
            else if (Password_val.length > 100) {
                TryFocus(Password, "Mật khẩu không vượt quá 100 ký tự!");
            }
            else if (!ValidTaiKhoan(Password_val)) {
                TryFocus(Password, "Mật khẩu chỉ chứa các ký tự A-Z a-z 9-0 và _!");
            }
        }

        let RePassword = $('#txt_RePassword');
        let RePassword_val = RePassword.val();
        if (RePassword_val != Password_val) {
            TryFocus(RePassword, "Hai trường mật khẩu không khớp nhau!");
        }

        let PhanQuyen = $('#sel_PhanQuyen');
        let PhanQuyen_val = PhanQuyen.val();
        if (PhanQuyen_val == null || PhanQuyen_val == undefined || PhanQuyen_val < 0) {
            TryFocus(PhanQuyen, "Không được để trống phân quyền!");
        }

        //Khi dữ liệu đã đúng:
        if (!hasFocus) {
            ShowUIContent("Xác nhận thêm bản ghi?");
        }
    }

    $(function () {
        GetListPhanQuyen();
        GetListHeThong();

        $('.UI-accept').click(function () {
            UIContentToLoading();

            let form = $('#input-form')[0];
            let dataForm = new FormData(form);

            $.ajax({
                url: ctrl_Name + "PostCreate",
                method: "POST",
                processData: false,
                contentType: false,
                data: dataForm,
                success: function (result, status, xhr) {
                    let rs = JSON.parse(result);
                    console.log("Edit result:", rs);
                    if (rs.ErrCode == 2) {
                        ShowUIBlock();
                        ShowSuccessMessage("Thêm mới bản ghi thành công, tự động chuyển hướng sau khi hết thông báo!", function () { window.location.replace(ctrl_Name); });
                    }
                    else if (rs.ErrCode == 0) {
                        ShowFailMessage("Có lỗi xảy ra trong quá trình cập nhật dữ liệu!");
                    }
                    else {
                        ShowFailMessage(rs.ErrDes);
                    }
                },
                error: function (xhr, status, error) {
                    ShowFailMessage("Mất kết nối với máy chủ, vui lòng thử lại sau ít phút!");
                }
            }).always(function () {
                HideLoading();
            });
        });
    });

    function SingleImageChange(ele) {
        let image = ele.files[0];
        let src = (image != null && image != undefined) ? URL.createObjectURL(image) : errorImagePath;
        $('#avatar-review').prop("src", src);
        $('#txt_ImgName').val($(ele).val().split('\\').pop());
    }
</script>
